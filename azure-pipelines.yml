# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


# Triggers can be based on specific branches, tags, or even schedules.

# trigger:
#   schedules:
#     - cron: "0 0 * * *"

trigger:
  branches:
    include:
      - master
      # - feature/*

  # paths:
  #   exclude:
  #     - README.md

# pr:
#   branches:
#     include:
#     - master
#     - feature*

# variables:
#   - group: domo-api-variables
#   - name: BuildConfiguration
#     value: "Release"

resources:
  - repo: self

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: ScriptJob
        # Job configuration goes here
        steps:

          - powershell: 'Write-Host "I am running PowerShell on a pipeline agent. Woohoo!!"'

          - powershell: |
               'This is script line 1
               This is script line 2'

          - powershell: .\script1.ps1
          - pwsh: ./script1.ps1

          - task: PowerShell@2
            displayName: 'PowerShell@2: inline'         
            inputs:
              targetType: 'inline'
              script: 'Write-Host "This is me running PowerShell code!"'    

          - task: PowerShell@2
            displayName: 'PowerShell@2: filepath'
            inputs:
              targetType: filePath
              filePath: '$(Build.SourcesDirectory)/Powershell/script1.ps1'
              pwsh: true
              # arguments: 'whatever your script needs..'

          - script: echo Hello, world!
            displayName: 'Bash: one-line script'         
          
          - script: |
              echo Add other tasks to build, test, and deploy your project.
              echo See https://aka.ms/yaml
            displayName: 'Bash: multi-line script'

          - task: Bash@3
            displayName: 'Bash@3: inline'
            inputs:
              targetType: inline
              script: |
                echo "test"   

          - task: CmdLine@2
            displayName: 'CmdLine@2: one-line'
            inputs:
              script: echo "Structure of work folder of this pipeline:"
                

          - task: CmdLine@2
            displayName: 'CmdLine@2: multi-line'
            inputs:
              script: |
                echo "Structure of work folder of this pipeline:"
                tree $(Agent.WorkFolder)/1
      
                echo "Build.ArtifactStagingDirectory:" 
                echo "$(Build.ArtifactStagingDirectory)"
      
                echo "Build.BinariesDirectory:" 
                echo "$(Build.BinariesDirectory)"
      
                echo "Build.SourcesDirectory:"
                echo "$(Build.SourcesDirectory)"

                echo  "System.DefaultWorkingDirectory:"
                echo  "$(System.DefaultWorkingDirectory)"

                echo  "Pipeline.Workspace:"
                echo  "$(Pipeline.Workspace)"


          # - task: AzurePowerShell@5
          #   displayName: 'AzurePowerShell: Create Storage'
          #   inputs:
          #     azureSubscription: 'serviceconnection'
          #     ScriptType: 'FilePath'
          #     ScriptPath: './Powershell/StorageAcount.ps1'
          #     #ScriptArguments: 
          #     azurePowerShellVersion: 'LatestVersion'
    

          - task: AzureCLI@2
            displayName: 'AzureCLI: Create Storage'
            inputs:
              azureSubscription: serviceconnection
              scriptType: 'pscore'
              scriptLocation: 'scriptPath'
              scriptPath: './Powershell/StorageAcount.ps1'
            
  # - stage: Test
  #   jobs:
  #     - job: TestJob
  #       # Job configuration goes here

  # - stage: Infra
  #   jobs:
  #     - job: CrateStorage
  #       # Job configuration goes here
  #       steps: 
  #       # - task: AzureCLI@2
  #       #   displayName: Create Storage 
  #       #   inputs:
  #       #     azureSubscription: serviceconnection
  #       #     scriptType: pscore
  #       #     scriptLocation: inlineScript
  #       #     inlineScript: az storage account create -n "stg09234504" -g "example-rg" -l "UK South" --sku Standard_LRS

  #       # - task: AzureCLI@2
  #       #   displayName: Create Storage
  #       #   inputs:
  #       #     azureSubscription: serviceconnection
  #       #     scriptType: pscore
  #       #     scriptLocation: scriptPath
  #       #     inlineScript: "$(System.DefaultWorkingDirectory)/CLI/StorageAccount.azcli"

  #       # - task: AzureCLI@2
  #       #   displayName: 'Deploy AKS'
  #       #   inputs:
  #       #     azureSubscription: $(AzureResourceManagerConnection)
  #       #     scriptType: bash
  #       #     scriptLocation: inlineScript
  #       #     addSpnToEnvironment: true
  #       #     inlineScript: |
  #       #       #!/bin/bash     
    
  #       #       # $AKS_RG = "aks-rg"  
  #       #       # $AKS_CLUSTER = "aks-cluster"   
  #       #       # $AKS_LOCATION = "southindia"
    
  #       #       az group create -l southindia -n aks-rg
  #       #       az aks create -g aks-rg -n aks-cluster --enable-managed-identity --node-count 1 --generate-ssh-keys
